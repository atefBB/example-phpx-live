<?php

namespace App;

use Amp\Loop;
use Closure;

trait UpdatesTrait
{
    private $sender;

    public function setSender(Closure $sender)
    {
        $this->sender = $sender;
    }

    public function getSender(): Closure
    {
        return $this->sender;
    }

    public function update(string $marker)
    {
        call_user_func($this->sender, json_encode([
            "cause" => "phpx-update",
            "type" => "phpx-render",
            "marker" => $marker,
            "data" => (string) $this->render(),
            "class" => get_class($this),
        ]));
    }

    public function setTimeout(callable $delayed, int $ms, $data = null): string
    {
        return Loop::delay($ms, $delayed);
    }

    public function setInterval(callable $delayed, int $ms, $data = null): string
    {
        return Loop::repeat($ms, $delayed);
    }

    public function clearTimeout(string $watcherId)
    {
        Loop::cancel($watcherId);
    }
}
