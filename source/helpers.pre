<?php

namespace App;

use Closure;
use Exception;
use Ramsey\Uuid\Uuid;
use function Pre\Phpx\classMatching;
use function Pre\Phpx\Html\propsFrom;
use function Pre\Phpx\Html\render as renderHTML;

function render($name, $props = [])
{
    $props = (array) $props;

    if (isset($props["phpx-class"])) {
        $class = $props["phpx-class"];
    } else {
        $class = false;
        $frames = debug_backtrace(DEBUG_BACKTRACE_PROVIDE_OBJECT, 2);

        foreach ($frames as $frame) {
            if (isset($frame["class"])) {
                $class = $frame["class"];
                break;
            }
        }
    }

    if (class_exists($name)) {
        $object = new $name($props);
        $object->props["phpx-id"] = spl_object_hash($object);

        $wrapped = new ResponderComponent($object, $props);
        $wrapped->render();

        return $wrapped;
    }

    return new class($name, $props) extends Component
    {
        public $name;
        public $props;

        public function __construct($name, array $props = [])
        {
            $this->name = $name;
            $this->props = $props;
        }

        public function render()
        {
            return renderHTML($this->name, $this->props);
        }
    };
}
